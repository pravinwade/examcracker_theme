@model Demo.Models.QuestionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .mycombo {
        width: 100%;
    }
</style>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question - New</h4>
        <hr />
        @*@Html.ValidationSummary(true)*@
        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.SubjectID, "Subject")                    
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.SubjectID, Model.Subjects, "--Select Subject--", new { @class = "au-input au-input--full" })
                    @Html.ValidationMessageFor(model => model.SubjectID)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.SectionID, "Section")
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.SectionID, Model.Sections, "--Select Section--", new { @class = "au-input au-input--full" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.LessonID, "Lesson")                    
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.LessonID, Model.Lessons, "--Select Lesson--", new { @class = "au-input au-input--full" })
                    @Html.ValidationMessageFor(model => model.LessonID)
                </div>

                <div class="col-md-2">
                    @Html.LabelFor(model => model.TopicID, "Topic")
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.TopicID, Model.Topics, "--Select Topic--", new { @class = "au-input au-input--full" })
                </div>
            </div>
            </div>

        <div class="form-group">
            <div class="row">               

                <div class="col-md-2">
                    @Html.LabelFor(model => model.QuestionTypeID, "Type")
                </div>
                <div class="col-md-4">
                    @Html.RadioButtonFor(model => model.QuestionTypeID, "1", new { @checked = true })
                    @Html.Label("MCQ")
                    @Html.RadioButtonFor(model => model.QuestionTypeID, "0")
                    @Html.Label("Subjective")                   
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.QuesDiffLevelID, "Difficulty Level")
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.QuesDiffLevelID, Model.QuestionDiffLevels, "--Select Difficulty Level--", new { @class = "au-input au-input--full" })
                    @Html.ValidationMessageFor(model => model.QuesDiffLevelID)
                </div>
            </div>
            </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.QuestionText, "Question")
                </div>
                <div class="col-md-10">
                    @*@Html.TextAreaFor(model => model.QuestionText, new { style = "width:650px;resize:none; " })*@"
                    @Html.TextAreaFor(model => model.QuestionText, new { @class = "au-input au-input--full" , @style = "width:1200px;"})
                    @Html.ValidationMessageFor(model => model.QuestionText)
                </div>
            </div>
            </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.QuestionImage, "Question Image", new { @class = "mycombo" })
                </div>
                <div class="col-md-4">
                    <input type="file" name="name" value=" " />
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.MarksForQuestion, "Marks")
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.MarksForQuestion, "", new { @class = "au-input au-input--full" })
                    @Html.ValidationMessageFor(model => model.MarksForQuestion)
                </div>
            </div>
            </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.QuestionSourceId, "Source")
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.QuestionSourceId, Model.QuestionSources, "--Select Source--", new { @class = "au-input au-input--full" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.IsMultiSelect, "Multiple Selection")
                </div>
                <div class="col-md-4">
                    @Html.RadioButtonFor(model => model.IsMultiSelect, "0", new { @checked = true })
                    @Html.Label("No")
                    @Html.RadioButtonFor(model => model.IsMultiSelect, "1")
                    @Html.Label("Yes")
                </div>
            </div>
            </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.ExamTypes,"Exam ")
                </div>
                
                    @for (int i = 0; i < Model.ExamTypes.Count(); i++)
                    {
                        <div class="checkbox checkbox-success checkbox-inline">
                            @Html.CheckBoxFor(model => model.ExamTypes[i].Selected)
                            @Html.DisplayFor(model => model.ExamTypes[i].Text)
                            @Html.HiddenFor(model => model.ExamTypes[i].Value)
                            @Html.HiddenFor(model => model.ExamTypes[i].Text)
                        </div>
                    }
               @Html.ValidationMessageFor(model => model.ExamTypes)
            </div>
            </div>
            <br />
            <h4>Related Answers</h4>
        <hr />
        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer1.AnswerText, "Answer A", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Answer1.AnswerText, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Answer1.AnswerText)
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Answer1.AnswerImage, "OR Image", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    <input type="file" name="Answer1Image">
                </div>
           @* </div>
            </div>
    <div class="form-group">
        <div class="row">*@
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer1.CorrectAnswer, "Correct Answer", new { @class = "mycombo" })
                </div>
                <div class="col-md-1">
                    @Html.CheckBoxFor(model => model.Answer1.CorrectAnswer)
                </div>
           </div> 
            </div>
         
        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer2.AnswerText, "Answer B", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Answer2.AnswerText, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Answer2.AnswerText)
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Answer2.AnswerImage, "OR Image", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    <input type="file" name="Answer1Image">
                </div>
            @*</div>
            </div>
        <div class="form-group">
            <div class="row">*@
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer2.CorrectAnswer, "Correct Answer", new { @class = "mycombo" })
                </div>
                <div class="col-md-1">
                    @Html.CheckBoxFor(model => model.Answer2.CorrectAnswer)
                </div>
            </div>
            </div>
       
        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer3.AnswerText, "Answer C", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Answer3.AnswerText, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Answer3.AnswerText)
                </div>

                <div class="col-md-1">
                    @Html.LabelFor(model => model.Answer3.AnswerImage, "OR Image", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    <input type="file" name="Answer3Image">
                </div>
            @*</div>
            </div>
        <div class="form-group">
            <div class="row">*@
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer3.CorrectAnswer, "Correct Answer", new { @class = "mycombo" })
                </div>
                <div class="col-md-1">
                    @Html.CheckBoxFor(model => model.Answer3.CorrectAnswer)
                </div>
            </div>
            </div>
           
        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer4.AnswerText, "Answer D", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Answer4.AnswerText, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Answer4.AnswerText)
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Answer4.AnswerImage, "OR Image", new { @class = "mycombo" })
                </div>
                <div class="col-md-3">
                    <input type="file" name="Answer4Image">
                </div>
            @*</div>
            </div>
        <div class="form-group">
            <div class="row">*@
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Answer4.CorrectAnswer, "Correct Answer", new { @class = "mycombo" })
                </div>
                <div class="col-md-1">
                    @Html.CheckBoxFor(model => model.Answer4.CorrectAnswer)
                </div>
            </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>

        </div>
}   


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
